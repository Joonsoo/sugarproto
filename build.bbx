package com.giyeok.sugarproto

import file
import jvm
import maven
from bibix.plugins import scala
from bibix.plugins import ktjvm
from bibix.plugins import java
import git("https://github.com/Joonsoo/jparser.git") as jparser

var ktjvm.outVersion = "19"
var scala.outVersion = "19"

parser {
  parserGen = jparser.genKtAstMgroup2(
    cdgFile = "grammar/sugarproto.cdg",
    astifierClassName = "com.giyeok.sugarproto.SugarProtoAst",
    parserDataFileName = "sugarproto-mg2-parserdata.pb",
  )

  action generate {
    file.clearDirectory("parser/generated/kotlin")
    file.clearDirectory("parser/generated/resources")
    file.copyDirectory(parserGen.srcsRoot, "parser/generated/kotlin")
    file.copyFile(parserGen.parserData, "parser/generated/resources")
  }

  generated = ktjvm.library(
    srcs = glob("parser/generated/kotlin/**/*.kt"),
    deps = [jparser.ktparser.main],
    resources = [
      "parser/generated/resources/sugarproto-mg2-parserdata.pb"
    ]
  )

  main = ktjvm.library(
    srcs = glob("parser/main/kotlin/**/*.kt"),
    deps = [parser.generated],
  )

  test = ktjvm.library(
    srcs = glob("parser/test/kotlin/**/*.kt"),
    deps = [parser.main, ...testDeps],
  )
}

main = ktjvm.library(
  srcs = glob("main/kotlin/**/*.kt"),
  deps = [parser.main],
)

test = ktjvm.library(
  srcs = glob("test/kotlin/**/*.kt"),
  resources = glob("test/resources/**"),
  deps = [main, ...testDeps],
)

testDeps = [
  maven.artifact("org.junit.jupiter", "junit-jupiter-api", "5.8.2"),
]

bibixPlugin {
  impl = ktjvm.library(
    srcs = glob("bibixPlugin/kotlin/**/*.kt"),
    deps = [bibix.base, main]
  )

  test {
    from bibix.plugins import protobuf

    service = generateProto(
      source = "test/resources/service.supro",
      filename = "service.proto",
    )

    typeConversions {
      gen = generateMutableKtAndProto(
        source = "test/resources/type_conversions.supro",
        protoFileName = "test.proto",
        protoOuterClassName = "TypeConversionsProto",
        packageName = "com.giyeok.sugarproto.test",
        kotlinFileName = "TypeConversionsModel.kt",
        imports = [
          "com.giyeok.sugarproto.test.TypeConversionsProto",
        ],
      )
      protoSchema = protobuf.schema([gen.protoFile])
      protoJava = protobuf.java(protoSchema)

      action generate {
        file.copyFile(gen.protoFile, "test/generated/proto")
        file.copyDirectory(protoJava.rootDir, "test/generated/java")
        file.copyDirectory(gen.srcsRoot, "test/generated/kotlin")
      }
    }
  }
}

def generateProto(
  source: file,
  filename: string,
): file = bibixPlugin.impl:com.giyeok.sugarproto.bibixPlugin.GenerateProto

class Generated(
  srcsRoot: directory,
  protoFile: file,
)

def generateMutableKtAndProto(
  source: file,
  protoFileName: string,
  protoOuterClassName: string,
  packageName: string,
  kotlinFileName: string,
  imports?: list<string>,
  gdxMode: boolean = false,
): Generated = bibixPlugin.impl:com.giyeok.sugarproto.bibixPlugin.GenerateMutableKtAndProto
